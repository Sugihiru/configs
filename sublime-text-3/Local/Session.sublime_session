{
	"folder_history":
	[
		"/home/khin_c/working_dir/cpp_arcade/games/snake"
	],
	"last_version": 3126,
	"last_window_id": 24,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 0.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ERR",
						"ERR_NO_SUCH_DIR\t(errors.h)"
					],
					[
						"ERRN",
						"ERR_NO_SUCH_DIR\t(main.c)"
					],
					[
						"ERR_NO",
						"ERR_NO_SUCH_FILE\t(my_cd.c)"
					],
					[
						"cien",
						"client_fd"
					],
					[
						"ern",
						"errno.h\t(main.c)"
					],
					[
						"std",
						"stdio.h\t(main.c)"
					],
					[
						"ftra",
						"ftrace.h\t(ftrace.h)"
					],
					[
						"gets",
						"get_symbol_list\t(ftrace.h)"
					],
					[
						"t_n",
						"t_stack_node"
					],
					[
						"PTRAPEK",
						"PTRACE_PEEKUSER"
					],
					[
						"ftr",
						"ftrace.h\t(add_node64.c)"
					],
					[
						"add",
						"add_node64\t(nm.h)"
					],
					[
						"ft",
						"ftrace\t(Makefile)"
					],
					[
						"print",
						"print_symbols\t(nm.c)"
					],
					[
						"get_",
						"get_symbol_list64\t(get_symbol_list64.c)"
					],
					[
						"symbo",
						"symbol_list"
					],
					[
						"symb",
						"symbol_list"
					],
					[
						"fta",
						"ftrace.h\t(ftrace.h)"
					],
					[
						"plaz",
						"plazza.hpp\t(read.cpp)"
					],
					[
						"E",
						"EMAIL_ADDRESS"
					],
					[
						"commad",
						"command_line"
					],
					[
						"comm",
						"command_line"
					],
					[
						"plazza",
						"plazza.hpp\t(check.cpp)"
					],
					[
						"exi",
						"exists\t(read_commands.cpp)"
					],
					[
						"loop",
						"loop_reading_proc"
					],
					[
						"mth",
						"m_thread_pool"
					],
					[
						"e",
						"endl\t(reading_thread.cpp)"
					],
					[
						"exce",
						"exception"
					],
					[
						"except",
						"exception\t(exceptions.hpp)"
					],
					[
						"Named",
						"NamedPipe.hpp\t(read_commands.cpp)"
					],
					[
						"threadma",
						"thread_main_loop\t(plazza.hpp)"
					],
					[
						"mna",
						"m_name"
					],
					[
						"excp",
						"except"
					],
					[
						"NP",
						"NamedPipe"
					],
					[
						"inc",
						"inc\t#include \"…\""
					],
					[
						"Proce",
						"Process.hpp\t(Process.cpp)"
					],
					[
						"isVa",
						"isValidLastname"
					],
					[
						"sysca",
						"syscall_names"
					],
					[
						"padA",
						"padAfterInt"
					],
					[
						"p",
						"phone"
					],
					[
						"firt",
						"firstname"
					],
					[
						"firsnt",
						"firstname"
					],
					[
						"firstna",
						"firstname"
					],
					[
						"b",
						"begin\tbegin"
					],
					[
						"isV",
						"isValidFirstname"
					],
					[
						"lastn",
						"lastname"
					],
					[
						"firstn",
						"firstname"
					],
					[
						"printC",
						"printContact"
					],
					[
						"Sc",
						"ScopedLock.hpp\t(main.cpp)"
					],
					[
						"SC",
						"ScopedLock.hpp\t(ScopedLock.cpp)"
					],
					[
						"SCL",
						"ScopedLock"
					],
					[
						"Mutex",
						"Mutex.hpp\t(Mutex.cpp)"
					],
					[
						"Mu",
						"Mutex\t(Mutex.hpp)"
					],
					[
						"grap",
						"graphic_handle"
					],
					[
						"grp",
						"graphic_handle"
					],
					[
						"mga",
						"m_game_over_sprite"
					],
					[
						"mog",
						"m_game_over_sprite"
					],
					[
						"WH",
						"WhereAmI"
					],
					[
						"BOR",
						"BOARD_WIDTH"
					],
					[
						"IG",
						"IGame\t(graphicPlay.cpp)"
					],
					[
						"IGam",
						"IGame.hpp\t(IGraph.hpp)"
					],
					[
						"IGrap",
						"IGraph\t(arcade.hpp)"
					],
					[
						"Wh",
						"WHERE_AM_I"
					],
					[
						"exep",
						"exception"
					],
					[
						"lib_ar",
						"lib_arcade_snake.so\t(Makefile)"
					],
					[
						"SNAKE_",
						"SNAKE_GAME_PATH\t(main.cpp)"
					],
					[
						"ind",
						"ifnd\tifndef (…)"
					],
					[
						"tmpo",
						"tmp_pos2"
					],
					[
						"GET",
						"GET_MAP"
					],
					[
						"TILE",
						"TileType"
					],
					[
						"BOARD",
						"BOARD_WIDTH"
					],
					[
						"TI",
						"TileType"
					],
					[
						"arade",
						"arcade::CommandType::GET_MAP\t(play.cpp)"
					],
					[
						"STARTL",
						"STARTING_PLAYER_LEN"
					],
					[
						"un",
						"uint16_t"
					],
					[
						"arcade",
						"arcade::CommandType"
					],
					[
						"WHERE",
						"WhereAmI\t(Game.cpp)"
					],
					[
						"WHEREAM",
						"WHERE_AM_I\t(play.cpp)"
					],
					[
						"WHAM",
						"WhereAmI\t(IGame.hpp)"
					],
					[
						"WERE",
						"WHERE_AM_I\t(Protocol.hpp)"
					],
					[
						"gameinf",
						"game_info"
					],
					[
						"GM",
						"GetMap"
					],
					[
						"OCAM",
						"OCAMLFLAGS"
					],
					[
						"OCA",
						"OCAMLFLAGS"
					],
					[
						"ne",
						"namespace\t(Protocol.hpp)"
					],
					[
						"name",
						"namespace\t(Protocol.hpp)"
					],
					[
						"CXX",
						"CXXFLAGS"
					],
					[
						"comma",
						"command"
					],
					[
						"handle_s",
						"handle_signal.c\t(handle_signal.c)"
					],
					[
						"lem",
						"lemipc.h\t(move.c)"
					],
					[
						"nb_t",
						"nb_teams"
					],
					[
						"func",
						"function\t(fibo.ml)"
					],
					[
						"sem",
						"semaphore"
					],
					[
						"refee",
						"referee_loop"
					],
					[
						"refere",
						"referee_play"
					],
					[
						"lmei",
						"lemipc.h\t(get_infos_board.c)"
					],
					[
						"MSG_",
						"MSG_MOVE\t(referee.c)"
					],
					[
						"getnb",
						"get_nb_players"
					],
					[
						"lemi",
						"lemipc.h\t(get_infos_board.c)"
					],
					[
						"pos",
						"position"
					],
					[
						"is_sur",
						"is_surround.c\t(is_surround.c)"
					],
					[
						"get_nb",
						"get_nb_players"
					],
					[
						"stru",
						"struct.h\t(referee.c)"
					],
					[
						"getb",
						"get_nb_players"
					],
					[
						"BO",
						"BOARD_HEIGHT"
					],
					[
						"semn",
						"sem_num"
					],
					[
						"semid",
						"sem_id"
					],
					[
						"plaer",
						"player_pos"
					],
					[
						"errors",
						"errors.h\t(errors.h)"
					],
					[
						"nb",
						"nb_players_around"
					],
					[
						"shmid",
						"shm_id\t(launch_game.c)"
					],
					[
						"shmi",
						"shm_id"
					],
					[
						"laun",
						"launch_game.c\t(launch_game.c)"
					],
					[
						"lepi",
						"lemipc.h\t(load_key.c)"
					],
					[
						"load_",
						"load_key.c\t(load_key.c)"
					],
					[
						"phil",
						"philosopher"
					],
					[
						"chop",
						"chopsticks\t(struct.h)"
					],
					[
						"phi",
						"philosophers\t(struct.h)"
					],
					[
						"PTHRE",
						"PTHREAD_MUTEX_INITIALIZER"
					],
					[
						"PTHREAD_",
						"PTHREAD_MUTEX_INITIALIZER\t(philo.c)"
					],
					[
						"chp",
						"chopsticks"
					],
					[
						"init_h",
						"init_chopsticks\t(philo.h)"
					],
					[
						"gm",
						"g_mutex"
					],
					[
						"last",
						"last_action"
					],
					[
						"pho",
						"philosopher"
					],
					[
						"phis",
						"philosophers"
					],
					[
						"pil",
						"philosopher\t(philo.c)"
					],
					[
						"init_",
						"init_chopsticks\t(main.c)"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 152.0,
				"last_filter": "pkginst",
				"selected_items":
				[
					[
						"pkginst",
						"Package Control: Install Package"
					],
					[
						"pkglist",
						"Package Control: List Packages"
					],
					[
						"pkgin",
						"Package Control: Install Package"
					],
					[
						"pkg",
						"Package Control: List Packages"
					],
					[
						"pkgins",
						"Package Control: Install Package"
					],
					[
						"pkgli",
						"Package Control: List Packages"
					],
					[
						"ssasm",
						"Set Syntax: x86 and x86_64 Assembly"
					],
					[
						"manpage",
						"Manpage: Open manual page"
					],
					[
						"ssc",
						"Set Syntax: C++"
					],
					[
						"pkgremove",
						"Package Control: Remove Package"
					],
					[
						"42",
						"42 headers: settings"
					],
					[
						"ssc++",
						"Set Syntax: C++"
					],
					[
						"pck",
						"Install Package Control"
					],
					[
						"ssbash",
						"Set Syntax: Shell Script (Bash)"
					]
				],
				"width": 485.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"view.run_command(\"epitech_header\")",
					"view.run_command(\"example\")",
					"view.run_command()"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/khin_c/working_dir/PSU_2016_myftp/.gitignore",
				"/home/khin_c/working_dir/PSU_2016_myftp/src/main.c",
				"/home/khin_c/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_42sh/src/builtins/my_cd.c",
				"/home/khin_c/Epitanime/rush_asso.txt",
				"/home/khin_c/Epitanime/conv3.txt",
				"/home/khin_c/working_dir/archives/c/PSU_2016_lemipc/src/referee.c",
				"/home/khin_c/working_dir/OCAML_2016_agenda/agenda.ml",
				"/home/khin_c/working_dir/OCAML_2016_agenda/contact.ml",
				"/home/khin_c/test/trace/main.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/get_symbol_list.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/look_for_func.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/user_call.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/child.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/Makefile",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/ftrace.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/main.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/syscall.c",
				"/home/khin_c/Downloads/rand.c",
				"/home/khin_c/Downloads/challenge.pyc",
				"/home/khin_c/Downloads/test.py",
				"/home/khin_c/Downloads/challenge.py",
				"/home/khin_c/pyvirtualenv/secu/lib/python3.5/site-packages/unpyclib/application.py",
				"/home/khin_c/secu.txt",
				"/home/khin_c/Downloads/crackme",
				"/home/khin_c/Downloads/md5.py",
				"/home/khin_c/Downloads/bf.py",
				"/home/khin_c/Downloads/challenge",
				"/home/khin_c/Downloads/steps",
				"/home/khin_c/Downloads/peda-session-crackme_basic.txt",
				"/home/khin_c/Downloads/.gdb_history",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/errors.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/signals.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/open_file.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/syscalls.h",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_42sh/include/macros.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/add_node64.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/get_symbol_list64.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/get_symbol_listc",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/print_user_func.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/print_symbols.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/stack.c",
				"/home/khin_c/working_dir/main.c",
				"/home/khin_c/working_dir/child.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/get_symbol_list.c",
				"/home/khin_c/working_dir/PSU_2016_strace/src/strace.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/syscall.h",
				"/home/khin_c/indie.txt",
				"/home/khin_c/test/secu/main.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/nm.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/include/nm.h",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/include/errors.h",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/add_node64.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/print_symbols.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/get_symbol_list64.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/Makefile",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/Ma",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/get_symbol_list32.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/open_file.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/.gitignore",
				"/home/khin_c/working_dir/cpp_plazza/include/NamedPipe.hpp",
				"/home/khin_c/working_dir/cpp_plazza/src/NamedPipe.cpp",
				"/home/khin_c/working_dir/archives/cpp/piscine/colles/tmp.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/Thread.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/Process.cpp",
				"/home/khin_c/working_dir/cpp_plazza/Makefile",
				"/home/khin_c/working_dir/cpp_plazza/src/read_commands.cpp",
				"/home/khin_c/working_dir/cpp_plazza/include/plazza.hpp",
				"/home/khin_c/working_dir/cpp_plazza/include/Thread.hpp",
				"/home/khin_c/working_dir/cpp_plazza/include/Process.hpp",
				"/home/khin_c/working_dir/cpp_plazza/src/reading_thread.cpp",
				"/home/khin_c/working_dir/cpp_plazza/.gitignore",
				"/home/khin_c/working_dir/cpp_plazza/src/read.cpp",
				"/home/khin_c/working_dir/cpp_plazza/tmp/distrib.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/distrib.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/check.cpp",
				"/home/khin_c/working_dir/archives/cpp/piscine/cpp_d01/ex00/white_rabbit.c",
				"/home/khin_c/working_dir/cpp_plazza/tmp/read.cpp",
				"/home/khin_c/test/regex/main.cpp",
				"/home/khin_c/working_dir/cpp_plazza/include/exceptions.hpp",
				"/home/khin_c/working_dir/archives/cpp/cpp_nanotekspice/src/read_user_cmd.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/CondVar.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/CondVar.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/main.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex4/Thread.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex4/Thread.hpp",
				"/home/khin_c/working_dir/cpp_plazza/src/exceptions.cpp",
				"/home/khin_c/working_dir/archives/cpp/cpp_nanotekspice/src/exceptions.cpp",
				"/home/khin_c/working_dir/archives/cpp/cpp_nanotekspice/include/exceptions.hpp",
				"/home/khin_c/working_dir/cpp_plazza/include/Mutex.hpp",
				"/home/khin_c/.cache/.fr-7eMIni/emulatari.free.fr/txt/anoworld.txt",
				"/home/khin_c/.cache/.fr-xQbf31/emulatari.free.fr/txt/after.txt",
				"/home/khin_c/working_dir/OCAML_2016_agenda/Makefile",
				"/home/khin_c/working_dir/OCAML_2016_agenda/contact.mli",
				"/home/khin_c/working_dir/OCAML_2016_agenda/main.ml",
				"/home/khin_c/working_dir/OCAML_2016_agenda/agenda.mli",
				"/home/khin_c/working_dir/OCAML_2016_agenda/.gitignore",
				"/home/khin_c/test/bar.ml",
				"/home/khin_c/test/foo.ml",
				"/home/khin_c/test/test.ml",
				"/home/khin_c/test/test2.ml",
				"/home/khin_c/OCAML_2016_agenda/contact.ml",
				"/usr/bin/blih",
				"/home/khin_c/OCAML_2016_agenda/agenda.ml",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_minishell2/my_str_to_wordtab.c",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_minishell2/my_s",
				"/home/khin_c/scripts/prepare_my_repo.sh",
				"/home/khin_c/scripts/test.py",
				"/home/khin_c/working_dir/PSU_2016_strace/include/strace_on.h",
				"/home/khin_c/working_dir/PSU_2016_strace/strace/Makefile",
				"/home/khin_c/working_dir/PSU_2016_strace/strace.c",
				"/home/khin_c/working_dir/PSU_2016_strace/Makefile",
				"/home/khin_c/working_dir/PSU_2016_strace/strace",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_minishell2/launch_cmd.c",
				"/home/khin_c/working_dir/main.ml",
				"/home/khin_c/working_dir/test.c",
				"/home/khin_c/working_dir/OCAML_2016_bootstrap_base/exception.ml",
				"/home/khin_c/working_dir/OCAML_2016_mylist/mylist.ml",
				"/home/khin_c/working_dir/OCAML_2016_agenda/tmp/main.ml",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/ScopedLock.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/ScopedLock.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/SafeQueue.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/SafeQueue.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/main.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/IMutex.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/Mutex.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/Mutex.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex6/ScopedLock.hpp"
			],
			"find":
			{
				"height": 34.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"port",
					"65536",
					"MIN_PORT",
					"converted_port",
					"ERR_NO_SUCH_DIR",
					", ",
					"EXIT_FAILURE",
					"path",
					"val_read",
					"46",
					"data_fd",
					"skt",
					"client_fd",
					"skt",
					"data_socket",
					"socket",
					"INADDR_ANY",
					"skt",
					"4243",
					"void",
					"4096",
					"&rep",
					"1000",
					"4243",
					"4242",
					"99",
					"117",
					"90",
					"227",
					"212",
					"227",
					"void",
					"227",
					"client_fd",
					"skt",
					"data_socket",
					"sai",
					"read",
					"skt",
					"0",
					"10",
					"write",
					"buff",
					"read",
					"tail",
					"head",
					"LDFLAGS",
					"philo",
					"buff",
					"socket",
					"stderr",
					"errno",
					"client",
					"const",
					"sai_client",
					"htons",
					"inet_addr",
					"socket",
					"sockaddr_in",
					"struct",
					"protocol",
					"0x59108448",
					"100",
					"1",
					"0x59106fe1",
					"print",
					"parse",
					"break",
					"d",
					"G",
					"GnGnGnGnGnGnGnGnGnGnGnGPPPPPPPPPPPIIIIIndddnIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIInIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIInddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddnddddddddddddddddddddddddddddnddddddndndddddddddddddddddddddddddddddddddddddddddddnddddddddddddddddddddddddddddddddddddnddnIIIIIIIIIIIIIIIIIIIIIIIIPPPPPPPPPPPPanananananananananananana",
					"filename",
					"fname",
					"challenge",
					"md5",
					";\n",
					"stack_call",
					"error",
					"call_addr",
					"Signame",
					"g_signames",
					"SIGTRAP",
					"SIGINT",
					"SIGHUP",
					"t_syscall",
					"fprintf",
					"n",
					"fprintf",
					"sig",
					"signo",
					"si_code",
					"SIGFPE",
					"PTRACE_GETSIGINFO",
					"catch",
					"PTRACE_GETSIGINFO",
					"GETREGS",
					"string",
					"caca",
					"VOID",
					"static",
					"orig_eax",
					"PEEKUSER",
					"400",
					"64",
					"prog_name",
					"print_user_func",
					"av",
					"symbol_list",
					"print_user_func",
					"print_symbols",
					"NULL",
					"out",
					"void",
					"call_addr",
					"ins",
					"tmp",
					"ins",
					"list",
					"new_node",
					"void",
					"regs",
					"{\n",
					"call_addr",
					"print_symbols",
					"look_for_func",
					"print_symbols",
					"ftrace",
					"print_user_func"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 23.0
			},
			"input":
			{
				"height": 31.0
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 312.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 392.0
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 0.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ERR",
						"ERR_NO_SUCH_DIR\t(errors.h)"
					],
					[
						"ERRN",
						"ERR_NO_SUCH_DIR\t(main.c)"
					],
					[
						"ERR_NO",
						"ERR_NO_SUCH_FILE\t(my_cd.c)"
					],
					[
						"cien",
						"client_fd"
					],
					[
						"ern",
						"errno.h\t(main.c)"
					],
					[
						"std",
						"stdio.h\t(main.c)"
					],
					[
						"ftra",
						"ftrace.h\t(ftrace.h)"
					],
					[
						"gets",
						"get_symbol_list\t(ftrace.h)"
					],
					[
						"t_n",
						"t_stack_node"
					],
					[
						"PTRAPEK",
						"PTRACE_PEEKUSER"
					],
					[
						"ftr",
						"ftrace.h\t(add_node64.c)"
					],
					[
						"add",
						"add_node64\t(nm.h)"
					],
					[
						"ft",
						"ftrace\t(Makefile)"
					],
					[
						"print",
						"print_symbols\t(nm.c)"
					],
					[
						"get_",
						"get_symbol_list64\t(get_symbol_list64.c)"
					],
					[
						"symbo",
						"symbol_list"
					],
					[
						"symb",
						"symbol_list"
					],
					[
						"fta",
						"ftrace.h\t(ftrace.h)"
					],
					[
						"plaz",
						"plazza.hpp\t(read.cpp)"
					],
					[
						"E",
						"EMAIL_ADDRESS"
					],
					[
						"commad",
						"command_line"
					],
					[
						"comm",
						"command_line"
					],
					[
						"plazza",
						"plazza.hpp\t(check.cpp)"
					],
					[
						"exi",
						"exists\t(read_commands.cpp)"
					],
					[
						"loop",
						"loop_reading_proc"
					],
					[
						"mth",
						"m_thread_pool"
					],
					[
						"e",
						"endl\t(reading_thread.cpp)"
					],
					[
						"exce",
						"exception"
					],
					[
						"except",
						"exception\t(exceptions.hpp)"
					],
					[
						"Named",
						"NamedPipe.hpp\t(read_commands.cpp)"
					],
					[
						"threadma",
						"thread_main_loop\t(plazza.hpp)"
					],
					[
						"mna",
						"m_name"
					],
					[
						"excp",
						"except"
					],
					[
						"NP",
						"NamedPipe"
					],
					[
						"inc",
						"inc\t#include \"…\""
					],
					[
						"Proce",
						"Process.hpp\t(Process.cpp)"
					],
					[
						"isVa",
						"isValidLastname"
					],
					[
						"sysca",
						"syscall_names"
					],
					[
						"padA",
						"padAfterInt"
					],
					[
						"p",
						"phone"
					],
					[
						"firt",
						"firstname"
					],
					[
						"firsnt",
						"firstname"
					],
					[
						"firstna",
						"firstname"
					],
					[
						"b",
						"begin\tbegin"
					],
					[
						"isV",
						"isValidFirstname"
					],
					[
						"lastn",
						"lastname"
					],
					[
						"firstn",
						"firstname"
					],
					[
						"printC",
						"printContact"
					],
					[
						"Sc",
						"ScopedLock.hpp\t(main.cpp)"
					],
					[
						"SC",
						"ScopedLock.hpp\t(ScopedLock.cpp)"
					],
					[
						"SCL",
						"ScopedLock"
					],
					[
						"Mutex",
						"Mutex.hpp\t(Mutex.cpp)"
					],
					[
						"Mu",
						"Mutex\t(Mutex.hpp)"
					],
					[
						"grap",
						"graphic_handle"
					],
					[
						"grp",
						"graphic_handle"
					],
					[
						"mga",
						"m_game_over_sprite"
					],
					[
						"mog",
						"m_game_over_sprite"
					],
					[
						"WH",
						"WhereAmI"
					],
					[
						"BOR",
						"BOARD_WIDTH"
					],
					[
						"IG",
						"IGame\t(graphicPlay.cpp)"
					],
					[
						"IGam",
						"IGame.hpp\t(IGraph.hpp)"
					],
					[
						"IGrap",
						"IGraph\t(arcade.hpp)"
					],
					[
						"Wh",
						"WHERE_AM_I"
					],
					[
						"exep",
						"exception"
					],
					[
						"lib_ar",
						"lib_arcade_snake.so\t(Makefile)"
					],
					[
						"SNAKE_",
						"SNAKE_GAME_PATH\t(main.cpp)"
					],
					[
						"ind",
						"ifnd\tifndef (…)"
					],
					[
						"tmpo",
						"tmp_pos2"
					],
					[
						"GET",
						"GET_MAP"
					],
					[
						"TILE",
						"TileType"
					],
					[
						"BOARD",
						"BOARD_WIDTH"
					],
					[
						"TI",
						"TileType"
					],
					[
						"arade",
						"arcade::CommandType::GET_MAP\t(play.cpp)"
					],
					[
						"STARTL",
						"STARTING_PLAYER_LEN"
					],
					[
						"un",
						"uint16_t"
					],
					[
						"arcade",
						"arcade::CommandType"
					],
					[
						"WHERE",
						"WhereAmI\t(Game.cpp)"
					],
					[
						"WHEREAM",
						"WHERE_AM_I\t(play.cpp)"
					],
					[
						"WHAM",
						"WhereAmI\t(IGame.hpp)"
					],
					[
						"WERE",
						"WHERE_AM_I\t(Protocol.hpp)"
					],
					[
						"gameinf",
						"game_info"
					],
					[
						"GM",
						"GetMap"
					],
					[
						"OCAM",
						"OCAMLFLAGS"
					],
					[
						"OCA",
						"OCAMLFLAGS"
					],
					[
						"ne",
						"namespace\t(Protocol.hpp)"
					],
					[
						"name",
						"namespace\t(Protocol.hpp)"
					],
					[
						"CXX",
						"CXXFLAGS"
					],
					[
						"comma",
						"command"
					],
					[
						"handle_s",
						"handle_signal.c\t(handle_signal.c)"
					],
					[
						"lem",
						"lemipc.h\t(move.c)"
					],
					[
						"nb_t",
						"nb_teams"
					],
					[
						"func",
						"function\t(fibo.ml)"
					],
					[
						"sem",
						"semaphore"
					],
					[
						"refee",
						"referee_loop"
					],
					[
						"refere",
						"referee_play"
					],
					[
						"lmei",
						"lemipc.h\t(get_infos_board.c)"
					],
					[
						"MSG_",
						"MSG_MOVE\t(referee.c)"
					],
					[
						"getnb",
						"get_nb_players"
					],
					[
						"lemi",
						"lemipc.h\t(get_infos_board.c)"
					],
					[
						"pos",
						"position"
					],
					[
						"is_sur",
						"is_surround.c\t(is_surround.c)"
					],
					[
						"get_nb",
						"get_nb_players"
					],
					[
						"stru",
						"struct.h\t(referee.c)"
					],
					[
						"getb",
						"get_nb_players"
					],
					[
						"BO",
						"BOARD_HEIGHT"
					],
					[
						"semn",
						"sem_num"
					],
					[
						"semid",
						"sem_id"
					],
					[
						"plaer",
						"player_pos"
					],
					[
						"errors",
						"errors.h\t(errors.h)"
					],
					[
						"nb",
						"nb_players_around"
					],
					[
						"shmid",
						"shm_id\t(launch_game.c)"
					],
					[
						"shmi",
						"shm_id"
					],
					[
						"laun",
						"launch_game.c\t(launch_game.c)"
					],
					[
						"lepi",
						"lemipc.h\t(load_key.c)"
					],
					[
						"load_",
						"load_key.c\t(load_key.c)"
					],
					[
						"phil",
						"philosopher"
					],
					[
						"chop",
						"chopsticks\t(struct.h)"
					],
					[
						"phi",
						"philosophers\t(struct.h)"
					],
					[
						"PTHRE",
						"PTHREAD_MUTEX_INITIALIZER"
					],
					[
						"PTHREAD_",
						"PTHREAD_MUTEX_INITIALIZER\t(philo.c)"
					],
					[
						"chp",
						"chopsticks"
					],
					[
						"init_h",
						"init_chopsticks\t(philo.h)"
					],
					[
						"gm",
						"g_mutex"
					],
					[
						"last",
						"last_action"
					],
					[
						"pho",
						"philosopher"
					],
					[
						"phis",
						"philosophers"
					],
					[
						"pil",
						"philosopher\t(philo.c)"
					],
					[
						"init_",
						"init_chopsticks\t(main.c)"
					]
				]
			},
			"buffers":
			[
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 152.0,
				"last_filter": "pkginst",
				"selected_items":
				[
					[
						"pkginst",
						"Package Control: Install Package"
					],
					[
						"pkglist",
						"Package Control: List Packages"
					],
					[
						"pkgin",
						"Package Control: Install Package"
					],
					[
						"pkg",
						"Package Control: List Packages"
					],
					[
						"pkgins",
						"Package Control: Install Package"
					],
					[
						"pkgli",
						"Package Control: List Packages"
					],
					[
						"ssasm",
						"Set Syntax: x86 and x86_64 Assembly"
					],
					[
						"manpage",
						"Manpage: Open manual page"
					],
					[
						"ssc",
						"Set Syntax: C++"
					],
					[
						"pkgremove",
						"Package Control: Remove Package"
					],
					[
						"42",
						"42 headers: settings"
					],
					[
						"ssc++",
						"Set Syntax: C++"
					],
					[
						"pck",
						"Install Package Control"
					],
					[
						"ssbash",
						"Set Syntax: Shell Script (Bash)"
					]
				],
				"width": 485.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"view.run_command(\"epitech_header\")",
					"view.run_command(\"example\")",
					"view.run_command()"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/khin_c/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/khin_c/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
				"/home/khin_c/working_dir/PSU_2016_myftp/.gitignore",
				"/home/khin_c/working_dir/PSU_2016_myftp/src/main.c",
				"/home/khin_c/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_42sh/src/builtins/my_cd.c",
				"/home/khin_c/Epitanime/rush_asso.txt",
				"/home/khin_c/Epitanime/conv3.txt",
				"/home/khin_c/working_dir/archives/c/PSU_2016_lemipc/src/referee.c",
				"/home/khin_c/working_dir/OCAML_2016_agenda/agenda.ml",
				"/home/khin_c/working_dir/OCAML_2016_agenda/contact.ml",
				"/home/khin_c/test/trace/main.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/get_symbol_list.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/look_for_func.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/user_call.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/child.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/Makefile",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/ftrace.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/main.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/syscall.c",
				"/home/khin_c/Downloads/rand.c",
				"/home/khin_c/Downloads/challenge.pyc",
				"/home/khin_c/Downloads/test.py",
				"/home/khin_c/Downloads/challenge.py",
				"/home/khin_c/pyvirtualenv/secu/lib/python3.5/site-packages/unpyclib/application.py",
				"/home/khin_c/secu.txt",
				"/home/khin_c/Downloads/crackme",
				"/home/khin_c/Downloads/md5.py",
				"/home/khin_c/Downloads/bf.py",
				"/home/khin_c/Downloads/challenge",
				"/home/khin_c/Downloads/steps",
				"/home/khin_c/Downloads/peda-session-crackme_basic.txt",
				"/home/khin_c/Downloads/.gdb_history",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/errors.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/signals.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/open_file.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/syscalls.h",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_42sh/include/macros.h",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/add_node64.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/get_symbol_list64.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/get_symbol_listc",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/print_user_func.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/print_symbols.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/src/stack.c",
				"/home/khin_c/working_dir/main.c",
				"/home/khin_c/working_dir/child.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/get_symbol_list.c",
				"/home/khin_c/working_dir/PSU_2016_strace/src/strace.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/include/syscall.h",
				"/home/khin_c/indie.txt",
				"/home/khin_c/test/secu/main.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/nm.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/include/nm.h",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/include/errors.h",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/add_node64.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/print_symbols.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/get_symbol_list64.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/Makefile",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/Ma",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/get_symbol_list32.c",
				"/home/khin_c/working_dir/archives/c/PSU_2016_nmobjdump/nm/src/open_file.c",
				"/home/khin_c/working_dir/PSU_2016_ftrace/.gitignore",
				"/home/khin_c/working_dir/cpp_plazza/include/NamedPipe.hpp",
				"/home/khin_c/working_dir/cpp_plazza/src/NamedPipe.cpp",
				"/home/khin_c/working_dir/archives/cpp/piscine/colles/tmp.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/Thread.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/Process.cpp",
				"/home/khin_c/working_dir/cpp_plazza/Makefile",
				"/home/khin_c/working_dir/cpp_plazza/src/read_commands.cpp",
				"/home/khin_c/working_dir/cpp_plazza/include/plazza.hpp",
				"/home/khin_c/working_dir/cpp_plazza/include/Thread.hpp",
				"/home/khin_c/working_dir/cpp_plazza/include/Process.hpp",
				"/home/khin_c/working_dir/cpp_plazza/src/reading_thread.cpp",
				"/home/khin_c/working_dir/cpp_plazza/.gitignore",
				"/home/khin_c/working_dir/cpp_plazza/src/read.cpp",
				"/home/khin_c/working_dir/cpp_plazza/tmp/distrib.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/distrib.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/check.cpp",
				"/home/khin_c/working_dir/archives/cpp/piscine/cpp_d01/ex00/white_rabbit.c",
				"/home/khin_c/working_dir/cpp_plazza/tmp/read.cpp",
				"/home/khin_c/test/regex/main.cpp",
				"/home/khin_c/working_dir/cpp_plazza/include/exceptions.hpp",
				"/home/khin_c/working_dir/archives/cpp/cpp_nanotekspice/src/read_user_cmd.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/CondVar.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/CondVar.cpp",
				"/home/khin_c/working_dir/cpp_plazza/src/main.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex4/Thread.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex4/Thread.hpp",
				"/home/khin_c/working_dir/cpp_plazza/src/exceptions.cpp",
				"/home/khin_c/working_dir/archives/cpp/cpp_nanotekspice/src/exceptions.cpp",
				"/home/khin_c/working_dir/archives/cpp/cpp_nanotekspice/include/exceptions.hpp",
				"/home/khin_c/working_dir/cpp_plazza/include/Mutex.hpp",
				"/home/khin_c/.cache/.fr-7eMIni/emulatari.free.fr/txt/anoworld.txt",
				"/home/khin_c/.cache/.fr-xQbf31/emulatari.free.fr/txt/after.txt",
				"/home/khin_c/working_dir/OCAML_2016_agenda/Makefile",
				"/home/khin_c/working_dir/OCAML_2016_agenda/contact.mli",
				"/home/khin_c/working_dir/OCAML_2016_agenda/main.ml",
				"/home/khin_c/working_dir/OCAML_2016_agenda/agenda.mli",
				"/home/khin_c/working_dir/OCAML_2016_agenda/.gitignore",
				"/home/khin_c/test/bar.ml",
				"/home/khin_c/test/foo.ml",
				"/home/khin_c/test/test.ml",
				"/home/khin_c/test/test2.ml",
				"/home/khin_c/OCAML_2016_agenda/contact.ml",
				"/usr/bin/blih",
				"/home/khin_c/OCAML_2016_agenda/agenda.ml",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_minishell2/my_str_to_wordtab.c",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_minishell2/my_s",
				"/home/khin_c/scripts/prepare_my_repo.sh",
				"/home/khin_c/scripts/test.py",
				"/home/khin_c/working_dir/PSU_2016_strace/include/strace_on.h",
				"/home/khin_c/working_dir/PSU_2016_strace/strace/Makefile",
				"/home/khin_c/working_dir/PSU_2016_strace/strace.c",
				"/home/khin_c/working_dir/PSU_2016_strace/Makefile",
				"/home/khin_c/working_dir/PSU_2016_strace/strace",
				"/home/khin_c/working_dir/archives/tek1/PSU_2015_minishell2/launch_cmd.c",
				"/home/khin_c/working_dir/main.ml",
				"/home/khin_c/working_dir/test.c",
				"/home/khin_c/working_dir/OCAML_2016_bootstrap_base/exception.ml",
				"/home/khin_c/working_dir/OCAML_2016_mylist/mylist.ml",
				"/home/khin_c/working_dir/OCAML_2016_agenda/tmp/main.ml",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/ScopedLock.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/ScopedLock.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/SafeQueue.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/SafeQueue.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/main.cpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/IMutex.hpp",
				"/home/khin_c/working_dir/bootstrap_plazza/ex7/Mutex.hpp"
			],
			"find":
			{
				"height": 23.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"port",
					"65536",
					"MIN_PORT",
					"converted_port",
					"ERR_NO_SUCH_DIR",
					", ",
					"EXIT_FAILURE",
					"path",
					"val_read",
					"46",
					"data_fd",
					"skt",
					"client_fd",
					"skt",
					"data_socket",
					"socket",
					"INADDR_ANY",
					"skt",
					"4243",
					"void",
					"4096",
					"&rep",
					"1000",
					"4243",
					"4242",
					"99",
					"117",
					"90",
					"227",
					"212",
					"227",
					"void",
					"227",
					"client_fd",
					"skt",
					"data_socket",
					"sai",
					"read",
					"skt",
					"0",
					"10",
					"write",
					"buff",
					"read",
					"tail",
					"head",
					"LDFLAGS",
					"philo",
					"buff",
					"socket",
					"stderr",
					"errno",
					"client",
					"const",
					"sai_client",
					"htons",
					"inet_addr",
					"socket",
					"sockaddr_in",
					"struct",
					"protocol",
					"0x59108448",
					"100",
					"1",
					"0x59106fe1",
					"print",
					"parse",
					"break",
					"d",
					"G",
					"GnGnGnGnGnGnGnGnGnGnGnGPPPPPPPPPPPIIIIIndddnIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIInIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIInddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddnddddddddddddddddddddddddddddnddddddndndddddddddddddddddddddddddddddddddddddddddddnddddddddddddddddddddddddddddddddddddnddnIIIIIIIIIIIIIIIIIIIIIIIIPPPPPPPPPPPPanananananananananananana",
					"filename",
					"fname",
					"challenge",
					"md5",
					";\n",
					"stack_call",
					"error",
					"call_addr",
					"Signame",
					"g_signames",
					"SIGTRAP",
					"SIGINT",
					"SIGHUP",
					"t_syscall",
					"fprintf",
					"n",
					"fprintf",
					"sig",
					"signo",
					"si_code",
					"SIGFPE",
					"PTRACE_GETSIGINFO",
					"catch",
					"PTRACE_GETSIGINFO",
					"GETREGS",
					"string",
					"caca",
					"VOID",
					"static",
					"orig_eax",
					"PEEKUSER",
					"400",
					"64",
					"prog_name",
					"print_user_func",
					"av",
					"symbol_list",
					"print_user_func",
					"print_symbols",
					"NULL",
					"out",
					"void",
					"call_addr",
					"ins",
					"tmp",
					"ins",
					"list",
					"new_node",
					"void",
					"regs",
					"{\n",
					"call_addr",
					"print_symbols",
					"look_for_func",
					"print_symbols",
					"ftrace",
					"print_user_func"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"sheets":
					[
					]
				},
				{
					"sheets":
					[
					]
				}
			],
			"incremental_find":
			{
				"height": 23.0
			},
			"input":
			{
				"height": 31.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,1,0,0,0,0,0,0,0,1920,1080",
			"project": "",
			"replace":
			{
				"height": 42.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 312.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 392.0
			},
			"selected_group": 1,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 24,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
